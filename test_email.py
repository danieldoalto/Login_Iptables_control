#!/usr/bin/env python3
"""
Script independente para testar o envio de emails
"""
import os
import sys
from datetime import datetime

# Adicionar o diret√≥rio atual ao path para importar os m√≥dulos
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def create_test_user():
    """Cria um usu√°rio de teste"""
    from app.models import User
    
    # Criar usu√°rio de teste
    user = User(email='danieldoalto@gmail.com')
    user.confirmation_token = 'test-token-123456'
    user.confirmed = False
    user.created_at = datetime.utcnow()
    
    return user

def test_email_functions():
    """Testa as fun√ß√µes de email"""
    print("üöÄ Iniciando testes de email...")
    print("=" * 50)
    
    try:
        # Carregar configura√ß√µes do .env
        from dotenv import load_dotenv
        load_dotenv()
        
        # Importar m√≥dulos necess√°rios
        from app import create_app, mail
        from app.email import send_confirmation_email, send_welcome_email, send_login_notification
        
        # Criar aplica√ß√£o Flask
        app = create_app()
        
        with app.app_context():
            # Inicializar mail
            mail.init_app(app)
            
            # Criar usu√°rio de teste
            user = create_test_user()
            
            print(f"üìß Configura√ß√£o de email:")
            print(f"   Servidor: {app.config.get('MAIL_SERVER')}")
            print(f"   Porta: {app.config.get('MAIL_PORT')}")
            print(f"   Usu√°rio: {app.config.get('MAIL_USERNAME')}")
            print(f"   Remetente: {app.config.get('MAIL_DEFAULT_SENDER')}")
            print()
            
            # Teste 1: Email de confirma√ß√£o
            print("üì® Teste 1: Email de confirma√ß√£o")
            try:
                send_confirmation_email(user)
                print("   ‚úÖ Email de confirma√ß√£o enviado com sucesso!")
            except Exception as e:
                print(f"   ‚ùå Erro ao enviar email de confirma√ß√£o: {str(e)}")
            print()
            
            # Teste 2: Email de boas-vindas
            print("üì® Teste 2: Email de boas-vindas")
            try:
                send_welcome_email(user)
                print("   ‚úÖ Email de boas-vindas enviado com sucesso!")
            except Exception as e:
                print(f"   ‚ùå Erro ao enviar email de boas-vindas: {str(e)}")
            print()
            
            # Teste 3: Notifica√ß√£o de login
            print("üì® Teste 3: Notifica√ß√£o de login")
            try:
                send_login_notification(user, '192.168.1.100', 'Mozilla/5.0 (Test Browser)')
                print("   ‚úÖ Notifica√ß√£o de login enviada com sucesso!")
            except Exception as e:
                print(f"   ‚ùå Erro ao enviar notifica√ß√£o de login: {str(e)}")
            print()
            
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {str(e)}")
        print("   Certifique-se de que o ambiente virtual est√° ativo e as depend√™ncias instaladas")
    except Exception as e:
        print(f"‚ùå Erro geral: {str(e)}")

def main():
    """Fun√ß√£o principal"""
    print("üîê Teste de Email - Sistema de Login com Firewall")
    print("=" * 60)
    
    # Verificar se as configura√ß√µes foram fornecidas
    if len(sys.argv) > 1 and sys.argv[1] == '--help':
        print("""
Uso: python test_email.py [op√ß√µes]

Op√ß√µes:
  --help          Mostra esta ajuda

Para usar este script:

1. Configure suas credenciais de email no arquivo .env
2. Para Gmail:
   - Ative a verifica√ß√£o em duas etapas
   - Gere uma senha de app
   - Use a senha de app no campo MAIL_PASSWORD

3. Execute: python test_email.py

O script ir√°:
- Carregar configura√ß√µes do arquivo .env
- Usar as fun√ß√µes do m√≥dulo app.email
- Testar 3 tipos de emails: confirma√ß√£o, boas-vindas e notifica√ß√£o de login
        """)
        return
    
    # Executar testes
    test_email_functions()
    
    print("=" * 60)
    print("‚úÖ Testes conclu√≠dos!")
    print("üìù Verifique sua caixa de entrada para confirmar o recebimento dos emails")

if __name__ == '__main__':
    main() 